/**
 * apaleo Inventory API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CityTaxNetPricingRuleModel } from './cityTaxNetPricingRuleModel';
import { CityTaxSubcategoryModel } from './cityTaxSubcategoryModel';


export interface CreateCityTaxModel { 
    /**
     * The name of the city tax, as displayed to guests on invoice, offer, etc.<br />  Typical names are city tax or tourist tax.
     */
    name: { [key: string]: string; };
    /**
     * The description of the city tax, as displayed to guests. Add information on when it applies, and how it is calculated.
     */
    description: { [key: string]: string; };
    /**
     * The ID of the property for which the city tax is created
     */
    propertyId: string;
    /**
     * The base on which the city tax is calculated.
     */
    type: CreateCityTaxModel.TypeEnum;
    /**
     * How to treat the calculated city tax: as before tax or after tax
     */
    taxHandlingType: CreateCityTaxModel.TaxHandlingTypeEnum;
    /**
     * Depending on the type, the percent or multiplier used to calculate city tax
     */
    value: number;
    /**
     * If the city tax is subject to VAT, specify which VAT applies. If not, specify \'Without\'.
     */
    vatType: CreateCityTaxModel.VatTypeEnum;
    /**
     * Whether city tax is included in the rate, or added on top of it. Default is `false`
     */
    includeCityTaxInRateAmount?: boolean;
    /**
     * If set, limits the calculation of the city tax to the specified number of time slices, starting from the beginning.<br />  If not set, the city tax will be calculated for the whole stay.
     */
    limit?: number;
    /**
     * Additional subcategories for different age groups that are eligible for a reduced city tax. Can only be set if the type is \'PerPersonPerNight\' or \'PercentOfGross\'
     */
    subcategories?: Array<CityTaxSubcategoryModel>;
    /**
     * Additional set of rules where you can set a fixed city tax value based on the net accommodation cost. Only set if the type is \'PerPersonPerNightBasedOnNetPrice\'
     */
    netPricingRules?: Array<CityTaxNetPricingRuleModel>;
}
export namespace CreateCityTaxModel {
    export type TypeEnum = 'PercentOfGross' | 'PercentOfNet' | 'PerRoomPerNight' | 'PerPersonPerNight' | 'PerPersonPerNightBasedOnNetPrice';
    export const TypeEnum = {
        PercentOfGross: 'PercentOfGross' as TypeEnum,
        PercentOfNet: 'PercentOfNet' as TypeEnum,
        PerRoomPerNight: 'PerRoomPerNight' as TypeEnum,
        PerPersonPerNight: 'PerPersonPerNight' as TypeEnum,
        PerPersonPerNightBasedOnNetPrice: 'PerPersonPerNightBasedOnNetPrice' as TypeEnum
    };
    export type TaxHandlingTypeEnum = 'BeforeTax' | 'AfterTax';
    export const TaxHandlingTypeEnum = {
        BeforeTax: 'BeforeTax' as TaxHandlingTypeEnum,
        AfterTax: 'AfterTax' as TaxHandlingTypeEnum
    };
    export type VatTypeEnum = 'Null' | 'VeryReduced' | 'Reduced' | 'Normal' | 'Without' | 'Special' | 'ReducedCovid19' | 'NormalCovid19';
    export const VatTypeEnum = {
        Null: 'Null' as VatTypeEnum,
        VeryReduced: 'VeryReduced' as VatTypeEnum,
        Reduced: 'Reduced' as VatTypeEnum,
        Normal: 'Normal' as VatTypeEnum,
        Without: 'Without' as VatTypeEnum,
        Special: 'Special' as VatTypeEnum,
        ReducedCovid19: 'ReducedCovid19' as VatTypeEnum,
        NormalCovid19: 'NormalCovid19' as VatTypeEnum
    };
}


